// Variables to keep track of game state
let board;
let currentPlayer;



function setup() {
  createCanvas(300, 300);
  // Initialize the board and set the current player to 'X'
  board = [['', '', ''], ['', '', ''], ['', '', '']];
  currentPlayer = 'X';
}




function draw() {
  background(255);
  drawBoard();
  checkWinner();
}




function drawBoard() {
  let w = width / 3;
  let h = height / 3;
  strokeWeight(4);
  // Drawing the grid
  for (let i = 0; i < 3; i++) {
    for (let j = 0; j < 3; j++) {
      let x = i * w;
      let y = j * h;
      let cellContent = board[i][j];
      noFill();
      rect(x, y, w, h);
      textSize(32);
      textAlign(CENTER, CENTER);
      fill(0);
      text(cellContent, x + w / 2, y + h / 2);
    }
  }
}




function mousePressed() {
  // Convert mouse coordinates to board indices
  let i = floor(mouseX / (width / 3));
  let j = floor(mouseY / (height / 3));
  // If the cell is empty, fill it with the current player's symbol
  if (board[i][j] === '') {
    board[i][j] = currentPlayer;
    // Switch player
    currentPlayer = (currentPlayer === 'X') ? 'O' : 'X';
  }
}




function checkWinner() {
  // Check rows
  for (let i = 0; i < 3; i++) {
    if (board[i][0] !== '' && board[i][0] === board[i][1] && board[i][1] === board[i][2]) {
      alert(`${board[i][0]} wins!`);
      noLoop();
    }
  }
  // Check columns
  for (let j = 0; j < 3; j++) {
    if (board[0][j] !== '' && board[0][j] === board[1][j] && board[1][j] === board[2][j]) {
      alert(`${board[0][j]} wins!`);
      noLoop();
    }
  }
  // Check diagonals
  if (board[0][0] !== '' && board[0][0] === board[1][1] && board[1][1] === board[2][2]) {
    alert(`${board[0][0]} wins!`);
    noLoop();
  }
  if (board[0][2] !== '' && board[0][2] === board[1][1] && board[1][1] === board[2][0]) {
    alert(`${board[0][2]} wins!`);
    noLoop();
  }

  
  // Check for draw
  let isDraw = true;
  for (let i = 0; i < 3; i++) {
    for (let j = 0; j < 3; j++) {
      if (board[i][j] === '') {
        isDraw = false;
        break;
      }
    }
  }
  if (isDraw) {
    alert("It's a draw!");
    noLoop();
  }
}
 
